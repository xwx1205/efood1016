@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var entries = ViewBag.UserDiaries as List<PetShop.Models.DiaryEntry>;
    //var selectedDate = ViewBag.SelectedDate as string;
    var foodList = ViewBag.FoodList as List<PetShop.Models.Food>;
    var commonFoods = ViewBag.CommonFoods as List<PetShop.Models.CommonFood>;
    bool isOther = false;
    string selectedDate = Request.QueryString["date"];
    var diaryDate = !string.IsNullOrEmpty(selectedDate) ? selectedDate : DateTime.Today.ToString("yyyy-MM-dd");
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    html, body {
        height: 100%;
        margin: 0;
    }

    .page-title {
        text-align: left; /* 水平靠左 */
        margin-left: 10px; /* 可選，與 page-wrapper 左側對齊 */
    }

    .page-wrapper {
        display: flex;
        gap: 20px;
        max-width: 1200px;
        margin: 0 auto; /* 置中 */
        /*display: flex;
        gap: 20px;
        padding: 20px;
        width: 100%;
        box-sizing: border-box;*/
    }

        .page-wrapper .container {
            flex: 1; /* 兩欄平均分 */
            min-width: 400px; /* 避免太窄 */
        }

    .container {
        flex: 0 0 35%;
        max-width: 400px;
        display: flex;
        flex-direction: column;
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

    .diary-list-wrapper {
        flex: 1; /* 撐滿剩餘空間 */
        overflow-y: auto; /* 只對日記列表滾動 */
    }

    .diary-form-wrapper {
        flex: 0 0 40%;
        width: 100%;
        padding-left: 10px;
        overflow-y: auto;
    }

    .menu-icon {
        width: 65px; /* 可依需求調整 */
        height: 65px;
        border-radius: 5px;
        text-align: left;
        justify-content: flex-start
    }

    .card {
        background: #8e8480;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 200px;
        display: flex;
        justify-content: center;
    }
</style>

<div class="card">
    <img src="~/Image/飲食紀錄icon.png" alt="飲食紀錄icon" class="menu-icon">
    <h2 class="page-title"> 飲食紀錄</h2>
</div>

<div class="page-wrapper">
    <!-- 歷史日記顯示(左側) -->
    <div class="container mt-5" style="flex: 1 1 50%; max-width: 50%;">
        <form method="get" action="/Home/DiaryIndex" class="mb-3">
            <label for="searchDate">🔍 選擇日期查看紀錄：</label>
            @*<input type="date" id="searchDate" name="date" class="form-control"
                value="@Request.QueryString["date"]" onchange="this.form.submit()" />*@
            <input type="date" id="searchDate" name="date" class="form-control"
                   value="@diaryDate" onchange="this.form.submit()" />

        </form>

        <h4 class="mb-3">
            🕒
            @if (!string.IsNullOrEmpty(selectedDate))
            {
                <text>@selectedDate 的日記紀錄：</text>
            }
            else
            {
                <text>所有日記紀錄：</text>
            }
        </h4>
        @*<div class="diary-list-wrapper">
                @if (entries != null && entries.Count > 0)
                {
                    <ul class="list-group">
                        @foreach (var entry in entries)
                        {
                            <li class="list-group-item">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">@entry.CreateTime.ToString("yyyy-MM-dd HH:mm")</span>
                                    <span class="badge badge-secondary">日記</span>
                                </div>
                                <div class="mt-2">
                                    @if (!string.IsNullOrWhiteSpace(entry.Food))
                                    {
                                        <div><strong>食物：</strong>@entry.Food (@entry.Quantity 份)</div>
                                        <div><strong>餐別：</strong>@entry.MealType</div>
                                        <div><strong>熱量：</strong>@entry.Calories kcal</div>
                                    }
                                </div>
                                <button type="button" class="btn btn-danger btn-sm" onclick="deleteDiary(@entry.Id, this)">刪除</button>
                                <a href="@Url.Action("EditDiary", "Home", new { id = entry.Id })" class="btn btn-warning btn-sm">修改</a>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="alert alert-secondary">尚無日記紀錄。</div>
                }
            </div>*@
        <div class="diary-list-wrapper">
            @if (entries != null && entries.Count > 0)
            {
                var mealOrder = new List<string> { "早餐", "午餐", "晚餐", "點心" };
                var groupedEntries = entries
                    .GroupBy(e => e.CreateTime.Date)
                    .OrderByDescending(g => g.Key);

                foreach (var dayGroup in groupedEntries)
                {
                    <div class="diary-card">
                        <h5 class="date-title">@dayGroup.Key.ToString("yyyy-MM-dd")</h5>
                        @{
                            var meals = dayGroup
                                .GroupBy(e => e.MealType)
                                .OrderBy(g => mealOrder.IndexOf(g.Key));
                        }
                        @foreach (var mealGroup in meals)
                        {
                            @*<h6 class="meal-title">@mealGroup.Key</h6>*@
                            foreach (var entry in mealGroup.OrderBy(e => e.CreateTime))
                            {
                                <div class="meal-entry">
                                    <div class="meal-info">
                                        <div><span class="text-muted"><strong>餐別： @entry.MealType</strong></span> </div>
                                        <div>時間：@entry.CreateTime.ToString("yyyy-MM-dd HH:mm")</div>
                                        <div>食物：@entry.Food (@entry.Quantity 份)</div>
                                        <div class="nutrition-info">
                                            <div>熱量: @(entry.Calories.HasValue ? entry.Calories.Value.ToString("0.0") : "0") kcal</div>
                                            <div>蛋白質: @(entry.Protein.HasValue ? entry.Protein.Value.ToString("0.0") : "0") g</div>
                                            <div>脂肪: @(entry.Fat.HasValue ? entry.Fat.Value.ToString("0.0") : "0") g</div>
                                            <div>碳水: @(entry.Carbs.HasValue ? entry.Carbs.Value.ToString("0.0") : "0") g</div>
                                        </div>
                                    </div>
                                    <div class="meal-actions">
                                        <button type="button" class="btn btn-warning btn-sm" onclick="location.href='@Url.Action("EditDiary", "Home", new { id = entry.Id })'">修改</button>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteDiary(@entry.Id, this)">刪除</button>
                                        @*<a href="@Url.Action("EditDiary", "Home", new { id = entry.Id })" class="btn btn-warning btn-sm">修改</a>*@
                                    </div>
                                </div>
                            }
                        }
                    </div>
                }
            }
            else
            {
                <div class="alert alert-secondary">尚無日記紀錄。</div>
            }
        </div>

        <style>
            .diary-card {
                background: #f0eeec;
                border-radius: 12px;
                padding: 15px;
                margin-bottom: 20px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            }

            .date-title {
                margin-top: 0; /* 把上方空白拿掉 */
                margin-bottom: 10px; /* 下方留一點距離，看起來不會太擠 */
                font-weight: bold;
                /*font-size: 1.3rem;
                margin-bottom: 10px;
                border-bottom: 2px solid #eee;
                padding-bottom: 5px;*/
            }

            .meal-title {
                font-weight: 600;
                margin-top: 15px;
                margin-bottom: 8px;
            }

            .meal-entry {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                background: #fff;
                padding: 12px 15px;
                border-radius: 8px;
                margin-bottom: 10px;
                border: 1px solid #eee;
            }

            .meal-info {
                flex: 1;
                min-width: 0; /* 防止文字超出 */
            }

            .nutrition-info {
                font-size: 1rem;
                display: flex;
                gap: 15px;
                flex-wrap: wrap;
                margin-top: 5px;
            }

                .nutrition-info div {
                    flex: 1 1 80px; /* 每個欄位最少 80px */
                }

            .meal-actions {
                display: flex;
                flex-direction: column;
                gap: 5px;
                margin-left: 10px;
            }
        </style>

    </div>
    <!-- 日記輸入表單(右側) -->
    <div class="container mt-5 diary-form-wrapper">
        <!-- 成功/失敗訊息 -->
        @if (TempData["Msg"] != null)
        {
            <div class="alert alert-info">@TempData["Msg"]</div>
        }

        <div class="form-group">
            <label for="diaryContent">請選擇常用食物：</label>

            <form id="dateForm" method="post" action="/Home/DiaryArea">
                <label for="DiaryDate">飲食時間：</label>
                <input type="datetime-local" id="selectedDateTime" name="selectedDateTime"
                       value="@ViewBag.DiaryDate" />

                <div class="form-group mt-2">
                    <label for="MealType">用餐類別：</label>
                    <select id="MealType" name="MealType" class="form-control">
                        <option value="">-- 請選擇餐別 --</option>
                        <option value="早餐">早餐</option>
                        <option value="午餐">午餐</option>
                        <option value="晚餐">晚餐</option>
                        <option value="點心">點心</option>
                    </select>
                </div>
                <br />
                @*<select id="foodSelect" name="Food" onchange="onFoodSelectChange()">
                        <option value="">-- 請選擇食材 --</option>
                        @if (foodList != null)
                        {
                            var groupedFoods = foodList.GroupBy(f => f.Category);
                            foreach (var group in groupedFoods)
                            {
                                <optgroup label="@group.Key">
                                    @foreach (var food in group)
                                    {
                                        <option value="@food.Name"
                                                data-calories="@food.Calories"
                                                data-protein="@food.Protein"
                                                data-fat="@food.Fat"
                                                data-carb="@food.Carbs">
                                            @food.Name
                                        </option>
                                    }
                                </optgroup>
                            }
                        }
                        <option value="其他" @(isOther ? "selected" : "")>其他</option>
                    </select>*@

                <select id="commonSelect" name="CommonFood" onchange="onCommonSelectChange()">
                    <option value="">-- 請選擇食物 --</option>
                    @if (commonFoods != null)
                    {
                        var groupedCommon = commonFoods.GroupBy(f => f.Category);
                        foreach (var group in groupedCommon)
                        {
                            <optgroup label="@group.Key">
                                @foreach (var common in group)
                                {
                                    <option value="@common.Name"
                                            data-calories="@common.Calories"
                                            data-protein="@common.Protein"
                                            data-fat="@common.Fat"
                                            data-carb="@common.Carbs">
                                        @common.Name
                                    </option>
                                }
                            </optgroup>
                        }
                    }
                    <option value="其他" @(isOther ? "selected" : "")>其他</option>
                </select>
                <br />
                <input type="text" id="foodOtherInput" name="FoodOther" class="form-control mt-2"
                       style="display:none;" placeholder="請輸入食物名稱" />
                <div>
                    <label>數量</label>
                    <input type="number" id="qtyInput" name="Quantity" class="form-control d-inline-block" value="1" min="1" style="width:80px;" onchange="updateNutrition()">
                </div>
                <div id="nutritionInputs" class="mt-2">
                    <label>熱量</label>
                    <input type="number" id="caloriesInput" name="Calories" class="form-control d-inline-block" style="width:100px;" value="0" step="0.1">
                    <br />
                    <label>蛋白質</label>
                    <input type="number" id="proteinInput" name="Protein" class="form-control d-inline-block" style="width:100px;" value="0" step="0.1">
                    <br />
                    <label>脂肪</label>
                    <input type="number" id="fatInput" name="Fat" class="form-control d-inline-block" style="width:100px;" value="0" step="0.1">
                    <br />
                    <label>碳水化合物</label>
                    <input type="number" id="carbInput" name="Carbs" class="form-control d-inline-block" style="width:100px;" value="0" step="0.1">
                </div>
                <br />
                <input type="hidden" id="categoryInput" name="Category" value="" />
                <button type="submit" class="btn btn-primary mt-2">➕ 儲存日記</button>
            </form>
        </div>
    </div>
</div>

<script>
    //var ctx = document.getElementById("MyCanvas").getContext("2d");
    //var MyData = {
    //    type: "bar",
    //    data: {
    //        labels: ["熱量", "蛋白質", "脂肪", "碳水化合物"],
    //        datasets: [{
    //            label: "營養成分",
    //            data: [],
    //            backgroundColor: [
    //                "rgba(75,192,192,0.6)",
    //                "rgba(255,99,132,0.6)",
    //                "rgba(255,206,86,0.6)",
    //                "rgba(54,162,235,0.6)"
    //            ]
    //        }]
    //    },
    //    options: {
    //        scales: {
    //            y: { beginAtZero: true }
    //        }
    //    }
    //};
    //var MyChart = new Chart(ctx, MyData);

    //function showCalories() {
    //    let select = document.getElementById("foodSelect");
    //    let value = select.value;
    //    let text = select.options[select.selectedIndex].text;
    //    let protein = select.options[select.selectedIndex].getAttribute("data-protein");
    //    let fat = select.options[select.selectedIndex].getAttribute("data-fat");
    //    let carb = select.options[select.selectedIndex].getAttribute("data-carb");

    //    if (value) {
    //        // 更新圖表
    //        MyChart.data.labels = ["熱量", "蛋白質", "脂肪", "碳水化合物"];
    //        MyChart.data.datasets[0].data = [value, protein, fat, carb];
    //        MyChart.update();

    //        // 把食物名稱存進隱藏欄位
    //        document.getElementById("foodName").value = text;
    //    } else {
    //        document.getElementById("foodName").value = "";
    //    }
    //}

    //function onFoodSelectChange() {
    //    var foodSelect = document.getElementById('foodSelect');
    //    var foodOtherInput = document.getElementById('foodOtherInput');
    //    var selected = foodSelect.options[foodSelect.selectedIndex];
    //    if (foodSelect.value === "其他") {
    //        foodOtherInput.style.display = '';
    //        foodOtherInput.required = true;
    //    } else {
    //        foodOtherInput.style.display = 'none';
    //        foodOtherInput.required = false;
    //    }
    //}

    function onCommonSelectChange() {
        var commonSelect = document.getElementById('commonSelect');
        var foodOtherInput = document.getElementById('foodOtherInput');
        var selected = commonSelect.options[commonSelect.selectedIndex];
        if (commonSelect.value === "其他") {
            foodOtherInput.style.display = '';
            foodOtherInput.required = true;
        } else {
            foodOtherInput.style.display = 'none';
            foodOtherInput.required = false;
        }
    }

    //document.getElementById('foodSelect').addEventListener('change', function () {
    //    var selected = this.options[this.selectedIndex];
    //    var category = selected.parentElement.label;
    //    var calories = selected.getAttribute('data-calories');
    //    var protein = selected.getAttribute('data-protein');
    //    var fat = selected.getAttribute('data-fat');
    //    var carb = selected.getAttribute('data-carb');
    //    if (calories && selected.value !== "其他") {
    //        document.getElementById('caloriesInput').value = calories;
    //        document.getElementById('proteinInput').value = protein;
    //        document.getElementById('fatInput').value = fat;
    //        document.getElementById('carbInput').value = carb;
    //    }
    //});

    document.getElementById('commonSelect').addEventListener('change', function () {
        var selected = this.options[this.selectedIndex];
        var category = selected.parentElement.label;
        var calories = selected.getAttribute('data-calories');
        var protein = selected.getAttribute('data-protein');
        var fat = selected.getAttribute('data-fat');
        var carb = selected.getAttribute('data-carb');
        if (calories && calories !== "其他") {
            document.getElementById('caloriesInput').value = calories;
            document.getElementById('proteinInput').value = protein;
            document.getElementById('fatInput').value = fat;
            document.getElementById('carbInput').value = carb;
        }
    });

    function deleteDiary(id, btn) {
        console.log("前端傳入的 id:", id);
        if (!confirm('確定要刪除嗎？')) return;
        fetch('/Home/DeleteDiary', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: 'id=' + encodeURIComponent(id)
        })
            .then(r => r.json())
            .then(data => {
                if (data.success) {
                    btn.closest(".meal-entry").remove();
                    location.reload(); // 刪除後刷新頁面
                } else {
                    alert("刪除失敗，找不到資料");
                }
            });
    }
    function updateNutrition() {
        // 取得選擇的食材
        var select = document.getElementById('commonSelect');
        var qty = parseInt(document.getElementById('qtyInput').value) || 1;
        var selected = select.options[select.selectedIndex];

        var calories = parseFloat(selected.getAttribute('data-calories')) || 0;
        var protein = parseFloat(selected.getAttribute('data-protein')) || 0;
        var fat = parseFloat(selected.getAttribute('data-fat')) || 0;
        var carb = parseFloat(selected.getAttribute('data-carb')) || 0;

        // 乘上數量
        document.getElementById('caloriesInput').value = calories * qty;
        document.getElementById('proteinInput').value = protein * qty;
        document.getElementById('fatInput').value = fat * qty;
        document.getElementById('carbInput').value = carb * qty;

        // 若要送到後端，可將結果填入隱藏欄位
        document.getElementById('caloriesInput').value = totalCalories;
        // 其他營養成分也可用隱藏欄位傳送
    }

    // 初始化
    document.getElementById('commonSelect').addEventListener('change', updateNutritionInputs);
    document.getElementById('qtyInput').addEventListener('change', updateNutritionInputs);
</script>
